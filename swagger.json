{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Pro Swagger documentation üìì",
    "description": "The API for Task Pro Service. üëÅ‚Äçüó® \n[Backend github repository](https://github.com/DenysShchypt/task-backend-project)/\n[Frontend github repository](https://github.com/Alexandrbig1/task-pro)\n",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://task-backend-project.onrender.com/api",
      "description": "Dev"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Boards",
      "description": "Boards endpoints"
    },
    {
      "name": "Columns",
      "description": "Columns endpoints"
    },
    {
      "name": "Cards",
      "description": "Cards endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registers a new user",
        "operationId": "Register",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/UserRegistrationRequest"
        },
        "responses": {
          "201": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "5XX": {
            "description": "(5XX) Internal server error",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticates a user via login credentials",
        "operationId": "Login",
        "parameters": [],
        "requestBody": {
          "$ref": "#/components/requestBodies/LoginRequest"
        },
        "responses": {
          "201": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          },
          "5XX": {
            "description": "(5XX) Internal server error",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "operationId": "Logout",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfull operation",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/current-user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Information about User",
        "operationId": "Information about User",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "User update Avatar",
        "operationId": "Update Avatar",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateAvatarRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profiles": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update User",
        "operationId": "Update User",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateUserRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/change-theme": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update Theme",
        "operationId": "Update Theme",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateThemeRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation,",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateThemeParams"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Send Help",
        "operationId": "Sending a letter about help",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UserHelpRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserHelpResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/delete-user": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete User",
        "operationId": "Delete User",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfull operation",
            "content": {}
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "No access to data",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          },
          "409": {
            "description": "Can`t remove!",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/boards": {
      "get": {
        "tags": [
          "Boards"
        ],
        "summary": "Get all boards",
        "operationId": "Get all boards",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllBoardParams"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Boards"
        ],
        "summary": "Add new board",
        "operationId": "Add new board",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AddBoardRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardParams"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/boards/{id}": {
      "get": {
        "tags": [
          "Boards"
        ],
        "summary": "Get one board by Id",
        "operationId": "Get one board by Id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OneBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "No access to data",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Boards"
        ],
        "summary": "Update one board by Id",
        "operationId": "Update one board by Id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateBoardRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardParams"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "No access to data",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Boards"
        ],
        "summary": "Delete one board by Id",
        "operationId": "Delete one board by Id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfull operation",
            "content": {}
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "No access to data",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          },
          "409": {
            "description": "Can`t remove!",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/columns": {
      "post": {
        "tags": [
          "Columns"
        ],
        "summary": "Add new column",
        "operationId": "Add new column",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AddColumnRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/columns/{id}": {
      "delete": {
        "tags": [
          "Columns"
        ],
        "summary": "Delete one column by Id",
        "operationId": "Delete one column by Id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfull operation",
            "content": {}
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "No access to data",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          },
          "409": {
            "description": "Can`t remove!",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Columns"
        ],
        "summary": "Update titleColumn",
        "operationId": "Update titleColumn",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateColumnRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "No access to data",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cards": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Add new card",
        "operationId": "Add new card",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AddCardRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session / Not found",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cards/{id}": {
      "put": {
        "tags": [
          "Cards"
        ],
        "summary": "Update Card",
        "operationId": "Update Card",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateCardRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "No access to data",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session / Not found",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "Delete one card by Id",
        "operationId": "Delete one card by Id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfull operation",
            "content": {}
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "No access to data",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session / Not found",
            "content": {}
          },
          "409": {
            "description": "Can`t remove!",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Cards"
        ],
        "summary": "Moving card by column",
        "operationId": "Moving card by column",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateColumnCardRequest"
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateColumnCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided / Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "No access to data",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session / Not found",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegistrationParams": {
        "required": [
          "email",
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "description": "User's name",
            "example": "Denys"
          },
          "email": {
            "type": "string",
            "description": "A user's email address.",
            "format": "email"
          },
          "password": {
            "maxLength": 30,
            "minLength": 6,
            "type": "string",
            "description": "User's password",
            "example": "F558r$flo69sknx"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "description": "User's name",
            "example": "Denys"
          },
          "email": {
            "type": "string",
            "description": "A user's email address.",
            "format": "email"
          }
        }
      },
      "LoginParams": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "A user's email address.",
            "format": "email"
          },
          "password": {
            "maxLength": 30,
            "minLength": 6,
            "type": "string",
            "description": "User's password",
            "example": "F558r$flo69sknx"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YmU3OTJiMWRjOWQ5OWU4NjZmNjQxYiIsImlhdCI6MTcwNjk4MTY3NSwiZXhwIjoxNzA3MDUzNjc1fQ.CR1wWNZvCtiPpvpOUNpmSiBDWPeyaT_eeYXcZ_UL4OM"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refreshToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YzIzMWNkNDViMjg3NGFjOWRjYmIyZSIsImlhdCI6MTcwNzMxMjI2NCwiZXhwIjoxNzA3OTE3MDY0fQ.Vi2u42kO8jnGzjyqJ1Q-52ioaffdDPwpQtxYLH8x2Iw"
          },
          "user": {
            "$ref": "#/components/schemas/LoginResponse_user"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "description": "User's name",
            "example": "Denys"
          },
          "email": {
            "type": "string",
            "description": "A user's email address.",
            "format": "email"
          }
        }
      },
      "UpdateUserParams": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "description": "User's name",
            "example": "Denys"
          },
          "email": {
            "type": "string",
            "description": "A user's email address.",
            "format": "email"
          },
          "password": {
            "maxLength": 30,
            "minLength": 6,
            "type": "string",
            "description": "User's password",
            "example": "F558r$flo69sknx"
          }
        }
      },
      "UpdateAvatarParams": {
        "required": [
          "avatar"
        ],
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary",
            "example": "http://res.cloudinary.com/dsywt0aej/image/upload/v1707053839/avatars/65be792b1dc9d99e866f641b_Vasily.jpg or null"
          }
        }
      },
      "UpdateThemeParams": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": [
              "dark",
              "light",
              "violet"
            ]
          }
        }
      },
      "SendHelpParams": {
        "required": [
          "text",
          "theme"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "A user's email address.",
            "format": "email"
          },
          "text": {
            "type": "string",
            "description": "User's help",
            "example": "Hello! I need your help!"
          }
        }
      },
      "AddBoardParams": {
        "required": [
          "backgroundBoard",
          "icon",
          "titleBoard"
        ],
        "type": "object",
        "properties": {
          "titleBoard": {
            "type": "string",
            "description": "Board title",
            "example": "My board"
          },
          "background": {
            "type": "string",
            "description": "User's background board theme",
            "enum": [
              "default",
              "balloon",
              "clouds",
              "flowers",
              "full-moon",
              "gorge",
              "kapadokia",
              "milky-way",
              "moon",
              "night",
              "ocean",
              "pink-tree",
              "plant",
              "rocks",
              "ship",
              "unsplash"
            ]
          },
          "icon": {
            "type": "string",
            "description": "User's icon board",
            "enum": [
              "default",
              "balloon",
              "clouds",
              "flowers",
              "full-moon",
              "gorge",
              "kapadokia",
              "milky-way",
              "moon",
              "night",
              "ocean",
              "pink-tree",
              "plant",
              "rocks",
              "ship",
              "unsplash"
            ]
          }
        }
      },
      "AllBoardParams": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AllBoardParams_inner"
        }
      },
      "OneBoardResponse": {
        "type": "object",
        "properties": {
          "board": {
            "$ref": "#/components/schemas/OneBoardResponse_board"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OneBoardResponse_columns"
            }
          }
        }
      },
      "AddColumnParams": {
        "required": [
          "boardId",
          "titleColumn"
        ],
        "type": "object",
        "properties": {
          "titleColumn": {
            "type": "string",
            "description": "Column title",
            "example": "My column"
          },
          "boardId": {
            "type": "integer",
            "description": "Id"
          }
        }
      },
      "UpdateColumnParams": {
        "required": [
          "titleColumn"
        ],
        "type": "object",
        "properties": {
          "titleColumn": {
            "type": "string",
            "description": "Column title",
            "example": "My column"
          }
        }
      },
      "AddColumnResponse": {
        "type": "object",
        "properties": {
          "titleColumn": {
            "type": "string",
            "description": "Column title",
            "example": "My column"
          },
          "boardId": {
            "type": "integer",
            "description": "Id"
          },
          "owner": {
            "type": "integer",
            "description": "Id"
          }
        }
      },
      "UpdateColumnResponse": {
        "type": "object",
        "properties": {
          "titleColumn": {
            "type": "string",
            "description": "Column title",
            "example": "My column"
          },
          "boardId": {
            "type": "integer",
            "description": "Id"
          },
          "owner": {
            "type": "integer",
            "description": "Id"
          }
        }
      },
      "AddCardResponse": {
        "type": "object",
        "properties": {
          "titleCard": {
            "type": "string",
            "description": "Card title",
            "example": "My card"
          },
          "description": {
            "type": "string",
            "description": "Card description",
            "example": "My plane on the future"
          },
          "priority": {
            "type": "string",
            "description": "Priority card",
            "enum": [
              "without",
              "low",
              "medium",
              "high"
            ]
          },
          "deadline": {
            "type": "string",
            "description": "Card deadline",
            "example": "2015-03-01"
          },
          "columnId": {
            "type": "integer",
            "description": "Id"
          },
          "owner": {
            "type": "integer",
            "description": "Id"
          }
        }
      },
      "UpdateCardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "Id"
          },
          "titleCard": {
            "type": "string",
            "description": "Card title",
            "example": "My card"
          },
          "description": {
            "type": "string",
            "description": "Card description",
            "example": "My plane on the future"
          },
          "priority": {
            "type": "string",
            "description": "Priority card",
            "enum": [
              "without",
              "low",
              "medium",
              "high"
            ]
          },
          "deadline": {
            "type": "string",
            "description": "Card deadline",
            "example": "2015-03-01"
          },
          "columnId": {
            "type": "integer",
            "description": "Id"
          },
          "owner": {
            "type": "integer",
            "description": "Id"
          }
        }
      },
      "UpdateColumnCardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "Id"
          },
          "titleCard": {
            "type": "string",
            "description": "Card title",
            "example": "My card"
          },
          "description": {
            "type": "string",
            "description": "Card description",
            "example": "My plane on the future"
          },
          "priority": {
            "type": "string",
            "description": "Priority card",
            "enum": [
              "without",
              "low",
              "medium",
              "high"
            ]
          },
          "deadline": {
            "type": "string",
            "description": "Card deadline",
            "example": "2015-03-01"
          },
          "columnId": {
            "type": "string",
            "description": "Id",
            "example": "65c4d3229f657e563e54e029"
          },
          "owner": {
            "type": "integer",
            "description": "Id"
          }
        }
      },
      "UpdateCardParams": {
        "type": "object",
        "properties": {
          "titleCard": {
            "type": "string",
            "description": "Card title",
            "example": "My card"
          },
          "description": {
            "type": "string",
            "description": "Card description",
            "example": "My plane on the future"
          },
          "priority": {
            "type": "string",
            "description": "Priority card",
            "enum": [
              "without",
              "low",
              "medium",
              "high"
            ]
          },
          "deadline": {
            "type": "string",
            "description": "Card deadline",
            "example": "2015-03-01"
          }
        }
      },
      "UpdateColumnCardParams": {
        "type": "object",
        "properties": {
          "columnId": {
            "type": "integer",
            "description": "Id"
          }
        }
      },
      "AddCardParams": {
        "required": [
          "columnId",
          "deadline",
          "description",
          "priority",
          "titleCard"
        ],
        "type": "object",
        "properties": {
          "titleCard": {
            "type": "string",
            "description": "Card title",
            "example": "My card"
          },
          "description": {
            "type": "string",
            "description": "Card description",
            "example": "My plane on the future"
          },
          "priority": {
            "type": "string",
            "description": "Priority card",
            "enum": [
              "without",
              "low",
              "medium",
              "high"
            ]
          },
          "deadline": {
            "type": "string",
            "description": "Card deadline",
            "example": "2015-03-01"
          },
          "columnId": {
            "type": "integer",
            "description": "Id"
          }
        }
      },
      "UserHelpResponse": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "User's help",
            "example": "Thank you for your request, we will contact you!"
          }
        }
      },
      "UpdateAvatarResponse": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary",
            "example": "http://res.cloudinary.com/dsywt0aej/image/upload/v1707053839/avatars/65be792b1dc9d99e866f641b_Vasily.jpg or null"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "Id"
          },
          "name": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "description": "User's name",
            "example": "Denys"
          },
          "email": {
            "type": "string",
            "description": "A user's email address.",
            "format": "email"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YmU3OTJiMWRjOWQ5OWU4NjZmNjQxYiIsImlhdCI6MTcwNjk4MTY3NSwiZXhwIjoxNzA3MDUzNjc1fQ.CR1wWNZvCtiPpvpOUNpmSiBDWPeyaT_eeYXcZ_UL4OM"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary",
            "example": "http://res.cloudinary.com/dsywt0aej/image/upload/v1707053839/avatars/65be792b1dc9d99e866f641b_Vasily.jpg or null"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": [
              "dark",
              "light",
              "violet"
            ]
          }
        }
      },
      "LoginResponse_user": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary",
            "example": "http://res.cloudinary.com/dsywt0aej/image/upload/v1707053839/avatars/65be792b1dc9d99e866f641b_Vasily.jpg or null"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": [
              "dark",
              "light",
              "violet"
            ]
          },
          "name": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "description": "User's name",
            "example": "Denys"
          },
          "email": {
            "type": "string",
            "description": "A user's email address.",
            "format": "email"
          }
        }
      },
      "AllBoardParams_inner": {
        "type": "object",
        "properties": {
          "titleBoard": {
            "type": "string",
            "description": "Board title",
            "example": "My board"
          },
          "backgroundBoard": {
            "type": "string",
            "description": "User's background board theme",
            "enum": [
              "default",
              "balloon",
              "clouds",
              "flowers",
              "full-moon",
              "gorge",
              "kapadokia",
              "milky-way",
              "moon",
              "night",
              "ocean",
              "pink-tree",
              "plant",
              "rocks",
              "ship",
              "unsplash"
            ]
          },
          "icon": {
            "type": "string",
            "description": "User's icon board",
            "enum": [
              "default",
              "balloon",
              "clouds",
              "flowers",
              "full-moon",
              "gorge",
              "kapadokia",
              "milky-way",
              "moon",
              "night",
              "ocean",
              "pink-tree",
              "plant",
              "rocks",
              "ship",
              "unsplash"
            ]
          }
        }
      },
      "OneBoardResponse_board": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "Id"
          },
          "owner": {
            "type": "integer",
            "description": "Id"
          },
          "titleBoard": {
            "type": "string",
            "description": "Board title",
            "example": "My board"
          },
          "background": {
            "type": "string",
            "description": "User's background board theme",
            "enum": [
              "default",
              "balloon",
              "clouds",
              "flowers",
              "full-moon",
              "gorge",
              "kapadokia",
              "milky-way",
              "moon",
              "night",
              "ocean",
              "pink-tree",
              "plant",
              "rocks",
              "ship",
              "unsplash"
            ]
          },
          "icon": {
            "type": "string",
            "description": "User's icon board",
            "enum": [
              "default",
              "balloon",
              "clouds",
              "flowers",
              "full-moon",
              "gorge",
              "kapadokia",
              "milky-way",
              "moon",
              "night",
              "ocean",
              "pink-tree",
              "plant",
              "rocks",
              "ship",
              "unsplash"
            ]
          }
        }
      },
      "OneBoardResponse_cards": {
        "type": "object",
        "properties": {
          "titleColumn": {
            "type": "string",
            "description": "Card title",
            "example": "My card"
          },
          "boardId": {
            "type": "integer",
            "description": "Id"
          },
          "owner": {
            "type": "integer",
            "description": "Id"
          }
        }
      },
      "OneBoardResponse_columns": {
        "type": "object",
        "properties": {
          "titleColumn": {
            "type": "string",
            "description": "Column title",
            "example": "My column"
          },
          "boardId": {
            "type": "integer",
            "description": "Id"
          },
          "owner": {
            "type": "integer",
            "description": "Id"
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OneBoardResponse_cards"
            }
          }
        }
      }
    },
    "requestBodies": {
      "LoginRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginParams"
            }
          }
        },
        "required": true
      },
      "UserRegistrationRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserRegistrationParams"
            }
          }
        },
        "required": true
      },
      "UpdateAvatarRequest": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "$ref": "#/components/schemas/UpdateAvatarParams"
            }
          }
        }
      },
      "UpdateUserRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateUserParams"
            }
          }
        }
      },
      "UpdateThemeRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateThemeParams"
            }
          }
        }
      },
      "UserHelpRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SendHelpParams"
            }
          }
        }
      },
      "AddBoardRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AddBoardParams"
            }
          }
        }
      },
      "UpdateBoardRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AddBoardParams"
            }
          }
        }
      },
      "AddColumnRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AddColumnParams"
            }
          }
        }
      },
      "UpdateColumnRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateColumnParams"
            }
          }
        }
      },
      "AddCardRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AddCardParams"
            }
          }
        }
      },
      "UpdateCardRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateCardParams"
            }
          }
        }
      },
      "UpdateColumnCardRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateColumnCardParams"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}